}
}
get_group(10)
get_group <- function(age){
if (age > 0){
if (age<18){
ageGrp = "KIDS"
}else if(age<60){
ageGrp = "Adult"
}else {
ageGrp = "SENIOR"
}
}else {
ageGrop = "Not defeined"
message("wrong age")
}
message ("Your group is :", ageGrp)
}
get_group(10)
get_group(0)
get_group(-0)
get_group(-10)
get_group(10)
get_group(80)
get_group <- function(age){
if (age > 0){
if (age<18){
ageGrp = "KIDS"
}else if(age<60){
ageGrp = "Adult"
}else {
ageGrp = "SENIOR"
}
}else {
ageGrp = "Not defeined"
message("wrong age",ageGrp)
}
message ("Your group is :", ageGrp)
}
get_group(-10)
get_group <- function(age){
if (age > 0){
if (age<18){
ageGrp = "KIDS"
}else if(age<60){
ageGrp = "Adult"
}else {
ageGrp = "SENIOR"
}
}else {
ageGrp = "Not defeined"
message("wrong age : ",ageGrp)
}
message ("Your group is : ", ageGrp)
}
get_group(-10)
get_group <- function(age){
if (age > 0){
if (age<18){
ageGrp = "KIDS"
}else if(age<60){
ageGrp = "Adult"
}else {
ageGrp = "SENIOR"
}
}else {
ageGrp = "Not defeined"
message("wrong age")
}
message ("Your group is : ", ageGrp)
}
get_group(-10)
get_group(10)
HRA <- function(city){
hr_amnt <- switch(toupper("city"),
BLR = 7500,
MUM = 8000,
DEL = 10000,
CHN = 7500,
5000)
}
HRA <- function(city){
hr_amnt <- switch(toupper("city"),
BLR = 7500,
MUM = 8000,
DEL = 10000,
CHN = 7500,
5000)
return(hr_amnt)
}
HRA(mum)
HRA("mum")
HRA("BLR")
HRA <- function("city"){
hr_amnt <- switch(toupper("city"),
BLR = 7500,
MUM = 8000,
DEL = 10000,
CHN = 7500,
5000)
return(hr_amnt)
}
HRA <- function(city){
hr_amnt <- switch(toupper(city),
BLR = 7500,
MUM = 8000,
DEL = 10000,
CHN = 7500,
5000)
return(hr_amnt)
}
HRA("BLR")
HRA("mum")
HRA("pun")
HRA(pun)
salary_range <- function(band){
range <- switch(band,
L1 = "10000-20000",
L2 = "20000-30000",
L3 = "30000-40000")
return(range)
}
salary_range(L1)
salary_range("L1")
salary_range("L4")
salary_range("L3")
time <-15
repeat(
message("Welcome to R programing")
if (time >=20)
break
time = time + 1
)
repeat{
message("Welcome to R programing")
if (time >=20)
break
time = time + 1
}
repeat(
message("Welcome to R programing")
if (time >20)
break
time = time + 1
)
repeat{
message("Welcome to R programing")
if (time >20)
break
time = time + 1
}
repeat{
message("Welcome to R programing")
if (time >=20)
break
time = time + 1
}
repeat{
message("Welcome to R programing")
if (time >=20)
break
time = time + 1
}
repeat{
message("Welcome to R programing")
if (time >=20)
break
time = time + 1
}
repeat{
message("Welcome to R programing")
if (time >= 20)
break
time = time + 1
}
time <- 15
repeat{
message("Welcome to R programing")
if (time > 20)
break
time = time + 1
}
repeat{
message("Welcome to R programing")
if (time > 20)
break
time = time + 1
}
sqr <- function(n)
{
repeat
{
sqr = n*n
}
return(sqr)
}
sqr(5)
sqr <-function(n){
return(n*n)
}
sqr(5)
sqr <-function(n){
sqr = n * n
return(sqr)
}
sqr(5)
sqr <-function(n){
repeat {
square = n *n
message("square is : ", square)
if (square > 100) break
n = n + 1
}
}
sqr(5)
sqr(2)
get_finalbal <- function(amt,year,rate)
{
for (i in i:year) {
interest = round(amt*rate/100,2)
final_amt = amt + interest
message ("Year :", i, "amt :", amt, "interest :", interest, "final amt: ", final_amt)
amt = final_amt
}
return(final_amt)
}
get_finalbal(1000,5,5)
get_finalbal <- function(amt,year,rate)
{
for (i in i:year) {
interest = round(amt*rate/100,2)
final_amt = amt + interest
message ("Year :", i, " amt :", amt, " interest :", interest, " final amt: ", final_amt)
amt = final_amt
}
return(final_amt)
}
get_finalbal(1000,5,5)
get_finalbal <- function(amt,year,rate)
{
for (i in 1:year) {
interest = round(amt*rate/100,2)
final_amt = amt + interest
message ("Year :", i, " amt :", amt, " interest :", interest, " final amt: ", final_amt)
amt = final_amt
}
return(final_amt)
}
get_finalbal(1000,5,5)
get_finalbal(1000,5,5)
v <- c(23,2,3,4,56,45)
sort(v)
seq(1,10, by = 2)
seq(0,10, by = 2)
rev(v)
v
sort(v, decreasing = FALSE)
sort(v, decreasing = TRUE)
sort(v, increasing = TRUE)
sort(v, decreasing = TRUE)
v1 <- c(1,2,3,4,)
v2 <- c(5,6,7,8,9)
v1 <- c(1,2,3,4)
append(v1,v2)
test <- "R is a programing language fro data science"
grep('language',test)
test <- "R is a programing language for data science language"
grep('language',test)
install.packages("dplyr")
library(dplyr)
install.packages(c("fansi", "tibble"))
install.packages("nycflights13")
libcurlVersion(nycflightsl3)
libcurlVersion(nycflights13)
library(nycflights13)
install.packages(c("fansi", "tibble"))
View(flights)
View(flights)
library(nycflights13)
library(dplyr)
View(flights)
head(flights)
f1 <- filter(flights, month=07)
f1 <- filter(flights, month==07)
View(f1)
f2 <-filter(f1,day==3)
View(f2)
View(flights,month==9,day=2,origin=='LGA')
View(flights,month==9,day==2,origin=='LGA')
View(filter(flights,month==9,day==2,origin=='LGA'))
install packages("dplyr")
install.packages("dplyr")
install.packages("dplyr")
library(dplyr)
install.packages('nycflightsl3')
install.packages('nycflights13')
clr
view(flights)
View(flights)
View(flights)
library(nycflights13)
View(flights)
f1 <- filter(flights,month=7)
f1 <- filter(flights,'month=7')
f1 <- filter(flights,'month==7')
f1 <- filter(flights,month==7)
View(f1)
flights(flights[flights$month==7,flights$day==2,fights$dest=='SJU'])
flights(flights[flights$month==7,flights$day==2,fights$dest=='SJU',])
head(flights(flights[flights$month==7,flights$day==2,fights$dest=='SJU',]))
head(flights[flights$month==7,flights$day==2,fights$dest=='SJU',])
head(flights[flights$month==7,flights$day==1,fights$dest=='SJU',])
head(flights[flights$month==7 & flights$day==1 & fights$dest=='SJU'])
head(flights[flights$month==7 & flights$day==1 & fights$dest=='SJU'],)
head(flights[flights$month==7 & flights$day==1])
head(flights[flights$month==7 & flights$day==1,])
head(flights[flights$month==7 & flights$day==1 & fights$dest=='SJU',])
head((flights[flights$month==7 & flights$day==2 & flights$dest=='SJU',]))
View(flights[flights$month==7 & flights$day==2 & flights$dest=='SJU',])
View(flights)
summarise(flights,avg_air_time=mean(air_time,na.rm = T))
summarise(flights,total_air_time=sum(air_time,na.rm = T))
summarise(flights,sd_air_time=sd(air_time,na.rm = T))
View(mtcars)
head(mtcars)
byGear <- mtcars %>% group_by(gear)
View(byGear)
sample_n(flights,15)
sample_frac(flights,0.4)
df <- mtcars
df
result <- arrange(sample_n(filter(df,mpg>20),size = 10))
View(result)
result <- arrange(sample_n(filter(df,mpg>20),size = 10),desc(mpg))
a <-filter(df, mpg>20)
b <- sample_n(a,size = 5)
View(a)
View(b)
result <- arrange(b)
View(result)
result <- arrange(b,desc(mpg))
View(result)
result1 <- df %>% (mpg>20) %>% (size=5) %>% desc(mpg)
df
result1 <- df %>% (mpg>20) %>% (size=5) %>% desc(mpg)
result1 <- df %>% filter(mpg>20) %>% (size=5) %>% desc(mpg)
result1 <- df %>% filter(mpg>20) %>% sample_n(size=5) %>% desc(mpg)
result1 <- df %>% filter(mpg>20) %>% sample_n(size=5) %>% arrange(desc(mpg))
View(result1)
result1
result
install.packages('tidyr')
library(tidyr)
library(tidyselect)
plot(chickwts)
plot(ChickWeight)
library(mass)
library(MASS)
View(MAS)
View(MASS)
clear
MASS
plot(UScereal$sugars,UScereal$calories)
title(plot(UScereal$sugars,UScereal$calories))
title("plot(UScereal$sugars,UScereal$calories)")
title("MASS")
X <- UScereal$sugars
y <- UScereal$calories
x
y
X
library(grid)
x <- c(20,30,40,10)
labels <- c("soap","oil","Detergent","Shampoo")
lables
labels
x
pie(x,labels)
pie(x, main="city pie chart")
pie(x,labels, main="city pie chart")
pie(x,labels, main="city pie chart", col = rainbow(length(x)))
pie(x,labels=piperecent, main="city pie chart", col = rainbow(length(x))legend("topright",c("soap","oil","Detergent","Shampoo"),cex = 0.8, fill = rainbow(length(x))))
pie(x,labels=piperecent, main="city pie chart", col = rainbow(length(x)),legend("topright",c("soap","oil","Detergent","Shampoo"),cex = 0.8, fill = rainbow(length(x))))
pie(x,labels=pipercent, main="city pie chart", col = rainbow(length(x)),legend("topright",c("soap","oil","Detergent","Shampoo"),cex = 0.8, fill = rainbow(length(x))))
piepercent = round(100*x/sum(x),1)
piepercent
pie(x,labels=pipercent, main="city pie chart", col = rainbow(length(x)),legend("topright",c("soap","oil","Detergent","Shampoo"),cex = 0.8, fill = rainbow(length(x))))
pie(x,labels=piepercent, main="city pie chart", col = rainbow(length(x)),legend("topright",c("soap","oil","Detergent","Shampoo"),cex = 0.8, fill = rainbow(length(x))))
pie(x,labels=piepercent, main="city pie chart", col = rainbow(length(x)))legend("topright",c("soap","oil","Detergent","Shampoo"),cex = 0.8, fill = rainbow(length(x))))
pie(x,labels=piepercent, main="city pie chart", col = rainbow(length(x)))
legend("topright",c("soap","oil","Detergent","Shampoo"),cex = 0.8, fill = rainbow(length(x)))
pie(x,labels=piepercent, main="city pie chart", col = rainbow(length(x)))
legend("topright",c("soap","oil","Detergent","Shampoo"),cex = 0.2, fill = rainbow(length(x)))
pie(x,labels=piepercent, main="city pie chart", col = rainbow(length(x)))
legend("topright",c("soap","oil","Detergent","Shampoo"),cex = 0.4, fill = rainbow(length(x)))
pie(x,labels=piepercent, main="city pie chart", col = rainbow(length(x)))
legend("topright",c("soap","oil","Detergent","Shampoo"),cex = 0.7, fill = rainbow(length(x)))
pie(x,labels=piepercent, main="city pie chart", col = rainbow(length(x)))
legend("topright",c("soap","oil","Detergent","Shampoo"),cex = 0.7, fill = rainbow(length(x)))
pie(x,labels=piepercent, main="city pie chart", col = rainbow(length(x)))
legend("topright",c("soap","oil","Detergent","Shampoo"),cex = 0.8, fill = rainbow(length(x)))
install.packages("plotrix")
library(plotrix)
pie(x,labels=piepercent, main="city pie chart", col = rainbow(length(x)))
legend("topright",c("soap","oil","Detergent","Shampoo"),cex = 0.8, fill = rainbow(length(x)))
pie3D(x,lables,main="paie chart for countries")
pie3D(x,labels,main="paie chart for countries")
pie3D(x,labels,explode=0.1,main="paie chart for countries")
labels
pie3D(x,labels,explode = 0.1)
lbl = labels
pie3D(x,labels = lbl,explode = 0.1)
pie3D(x,labels=lbl,explode=0.1,main="paie chart for countries")
df <- read.csv(C:\Users\jysethy\krishnaik\ML-R\CarPrice_Assignment.csv)
df <- read.csv(C:/Users/jysethy/krishnaik/ML-R/CarPrice_Assignment.csv)
df <- read.csv('C:/Users/jysethy/krishnaik/ML-R/CarPrice_Assignment.csv')
head(df)
View(df)
summary(df)
plot(df)
set.seed(2)
library(caTools)
install.packages("caTools")
library(caTools)
split <- sample.split(df, SplitRatio = 0.7)
split
train <- subset(df, split='TRUE')
test <- subset(df, split='FALSE')
tain
train
View(train)
View(test)
model <- lm(price ~., data = train)
summary(model)
pred <- predict(model, test)
pred
plot(pred, type = "l", lty=1.8, col="blue")
plot(test$price, type =  "l", lty = 2, col= "red")
plot(test$price, type =  "l", lty = 1.8, col= "red")
plot(test$price, type =  "l", lty = 1.2, col= "red")
plot(test$price, type =  "l", lty = 1.2, col= "red")
line(pred, type = "l", col= "blue" )
plot(test$price, type =  "l", lty = 1.2, col= "red")
line(pred, type = "l", col= "blue" )
lines(pred, type = "l", col= "blue" )
plot(test$price, type =  "l", lty = 1.2, col= "red")
lines(pred, type = "l", col= "blue" )
rmse <- sqrt(mean(pred-df$price)^2)
rmse
install.packages("tidyverse")
library(DataExplorer)
install.packages("DataExplorer")
library(DataExplorer)
library(tidyverse)
carprice <- read.csv(CarPrice_assignment.csv)
carprice <- read.csv(CarPrice_Assignment.csv)
setwd("C:\Users\jysethy\krishnaik\ML-R")
setwd("C:/Users/jysethy/krishnaik/ML-R")
carprice <- read.csv(CarPrice_Assignment.csv)
carprice <- read.csv("CarPrice_Assignment.csv")
carprice %>% glimpse()
carprice %>%
create_report(
output_file = "carprice_eda",
output_dir = "C:/Users/jysethy/krishnaik/ML-R",
y = "price",
report_title = "Carprice EDA report"
)
library(tidyverse)
starwars
View(starwars)
glimpse(starwars)
library(skimr)
install.packages(skimr)
install.packages('skimr')
library(skimr)
skimr::starwars
skim(starwars)
cor.test(starwars$height,starwars$mass)
plot(starwars$height,starwars$mass)
sw_nj <- filter(starwars, name != "Jabba Desilijic Tiure")
View(sw_nj)
plot(starwars$height,starwars$mass)
plot(sw_nj$height,sw_nj$mass)
cor.test(sw_nj$height,sw_nj$mass)
cor1 <- cor.test(starwars$height,starwars$mass)
cor2 <- cor.test(sw_nj$height,sw_nj$mass)
library(broom)
?broom
cor1_t <- tidy(cor1)
cor2_t <- tidy(cor2)
library(jmv)
library(Jmv)
install.packages('jmv')
library(Jmv)
library(jmv)
corrMatrix(sw_nj,vars = vars(sw_nj$height,sw_nj$mass))
corrMatrix(sw_nj,vars = vars(height,mass))
corrMatrix(sw_nj,vars = vars(height,mass),
ci = T)
corrMatrix(sw_nj,vars = vars(height,mass),
ci = T,
plots = T)
corrMatrix(sw_nj,vars = vars(height,mass),
ci = T,
plots = T,
plotDens = T)
corrMatrix(sw_nj,vars = vars(height,mass),
ci = T,
plots = T,
plotDens = T,
plotStats = T)
